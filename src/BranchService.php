<?php

class BranchService {

	private static $initialized = false;
	private static $east_zip_prefixes = [
		'004',
		'005',
		'010',
		'011',
		'012',
		'013',
		'014',
		'015',
		'016',
		'017',
		'018',
		'019',
		'020',
		'021',
		'022',
		'023',
		'024',
		'025',
		'026',
		'027',
		'028',
		'029',
		'030',
		'031',
		'032',
		'033',
		'034',
		'035',
		'036',
		'037',
		'038',
		'039',
		'040',
		'041',
		'042',
		'043',
		'044',
		'045',
		'046',
		'047',
		'048',
		'049',
		'050',
		'051',
		'052',
		'053',
		'054',
		'055',
		'056',
		'057',
		'058',
		'059',
		'060',
		'061',
		'062',
		'063',
		'064',
		'065',
		'066',
		'067',
		'068',
		'069',
		'070',
		'071',
		'072',
		'073',
		'074',
		'075',
		'076',
		'077',
		'078',
		'079',
		'080',
		'081',
		'082',
		'083',
		'084',
		'085',
		'086',
		'087',
		'088',
		'089',
		'100',
		'101',
		'102',
		'103',
		'104',
		'105',
		'106',
		'107',
		'108',
		'109',
		'110',
		'111',
		'112',
		'113',
		'114',
		'115',
		'116',
		'117',
		'118',
		'119',
		'120',
		'121',
		'122',
		'123',
		'124',
		'125',
		'126',
		'127',
		'128',
		'129',
		'130',
		'131',
		'132',
		'133',
		'134',
		'135',
		'136',
		'137',
		'138',
		'139',
		'140',
		'141',
		'142',
		'143',
		'144',
		'145',
		'146',
		'147',
		'148',
		'149',
		'150',
		'151',
		'152',
		'153',
		'154',
		'155',
		'156',
		'157',
		'158',
		'159',
		'160',
		'161',
		'162',
		'163',
		'164',
		'165',
		'166',
		'167',
		'168',
		'169',
		'170',
		'171',
		'172',
		'173',
		'174',
		'175',
		'176',
		'177',
		'178',
		'179',
		'180',
		'181',
		'182',
		'183',
		'184',
		'185',
		'186',
		'187',
		'188',
		'189',
		'190',
		'191',
		'192',
		'193',
		'194',
		'195',
		'196',
		'197',
		'198',
		'199',
		'200',
		'201',
		'202',
		'203',
		'204',
		'205',
		'206',
		'207',
		'208',
		'209',
		'210',
		'211',
		'212',
		'213',
		'214',
		'215',
		'216',
		'217',
		'218',
		'219',
		'220',
		'221',
		'222',
		'223',
		'224',
		'225',
		'226',
		'227',
		'228',
		'229',
		'230',
		'231',
		'232',
		'233',
		'234',
		'235',
		'236',
		'237',
		'238',
		'239',
		'240',
		'241',
		'242',
		'243',
		'244',
		'245',
		'246',
		'247',
		'248',
		'249',
		'250',
		'251',
		'252',
		'253',
		'254',
		'255',
		'256',
		'257',
		'258',
		'259',
		'260',
		'261',
		'262',
		'263',
		'264',
		'265',
		'266',
		'267',
		'268',
		'269',
		'270',
		'271',
		'272',
		'273',
		'274',
		'275',
		'276',
		'277',
		'278',
		'279',
		'280',
		'281',
		'282',
		'283',
		'284',
		'285',
		'286',
		'287',
		'288',
		'289',
		'290',
		'291',
		'292',
		'293',
		'294',
		'295',
		'296',
		'297',
		'298',
		'299',
		'300',
		'301',
		'302',
		'303',
		'304',
		'305',
		'306',
		'307',
		'308',
		'309',
		'310',
		'311',
		'312',
		'313',
		'314',
		'315',
		'316',
		'317',
		'318',
		'319',
		'320',
		'321',
		'322',
		'323',
		'324',
		'325',
		'326',
		'327',
		'328',
		'329',
		'330',
		'331',
		'332',
		'333',
		'334',
		'335',
		'336',
		'337',
		'338',
		'339',
		'341',
		'342',
		'343',
		'344',
		'345',
		'346',
		'347',
		'348',
		'349',
		'350',
		'351',
		'352',
		'353',
		'354',
		'355',
		'356',
		'357',
		'358',
		'359',
		'360',
		'361',
		'362',
		'363',
		'364',
		'365',
		'366',
		'367',
		'368',
		'369',
		'370',
		'371',
		'372',
		'373',
		'374',
		'375',
		'376',
		'377',
		'378',
		'379',
		'380',
		'381',
		'382',
		'383',
		'384',
		'385',
		'386',
		'387',
		'388',
		'389',
		'390',
		'391',
		'392',
		'393',
		'394',
		'395',
		'396',
		'397',
		'398',
		'399',
		'400',
		'401',
		'402',
		'403',
		'404',
		'405',
		'406',
		'407',
		'408',
		'409',
		'410',
		'411',
		'412',
		'413',
		'414',
		'415',
		'416',
		'417',
		'418',
		'420',
		'421',
		'422',
		'423',
		'424',
		'425',
		'426',
		'427',
		'428',
		'429',
		'430',
		'431',
		'432',
		'433',
		'434',
		'435',
		'436',
		'437',
		'438',
		'439',
		'440',
		'441',
		'442',
		'443',
		'444',
		'445',
		'446',
		'447',
		'448',
		'449',
		'450',
		'451',
		'452',
		'453',
		'454',
		'455',
		'456',
		'457',
		'458',
		'459',
		'461',
		'462',
		'463',
		'464',
		'465',
		'466',
		'467',
		'468',
		'469',
		'470',
		'471',
		'472',
		'473',
		'474',
		'475',
		'476',
		'477',
		'478',
		'479',
		'480',
		'481',
		'482',
		'483',
		'484',
		'485',
		'486',
		'487',
		'488',
		'489',
		'490',
		'491',
		'492',
		'493',
		'494',
		'495',
		'496',
		'497',
		'498',
		'499',
		'500',
		'501',
		'502',
		'503',
		'504',
		'506',
		'507',
		'509',
		'520',
		'521',
		'522',
		'523',
		'524',
		'525',
		'526',
		'527',
		'528',
		'529',
		'530',
		'531',
		'532',
		'533',
		'534',
		'535',
		'536',
		'537',
		'538',
		'539',
		'540',
		'541',
		'542',
		'543',
		'544',
		'545',
		'546',
		'547',
		'548',
		'549',
		'550',
		'551',
		'552',
		'553',
		'554',
		'555',
		'556',
		'557',
		'558',
		'559',
		'560',
		'562',
		'563',
		'564',
		'565',
		'566',
		'567',
		'582',
		'600',
		'601',
		'602',
		'603',
		'604',
		'605',
		'606',
		'607',
		'608',
		'609',
		'610',
		'611',
		'612',
		'613',
		'614',
		'615',
		'616',
		'617',
		'618',
		'619',
		'620',
		'621',
		'622',
		'623',
		'624',
		'625',
		'626',
		'627',
		'628',
		'629',
		'630',
		'631',
		'632',
		'633',
		'634',
		'635',
		'636',
		'637',
		'638',
		'639',
		'650',
		'651',
		'652',
		'653',
		'654',
		'655',
		'700',
		'701',
		'702',
		'703',
		'704',
		'705',
		'706',
		'707',
		'708',
		'709',
		'712',
		'713',
		'714',
		'715',
		'716',
		'717',
		'719',
		'720',
		'721',
		'722',
		'723',
		'724',
		'725',
		'728',
		'776',
		'777',
		'004',
		'005',
		'010',
		'011',
		'012',
		'013',
		'014',
		'015',
		'016',
		'017',
		'018',
		'019',
		'020',
		'021',
		'022',
		'023',
		'024',
		'025',
		'026',
		'027',
		'028',
		'029',
		'030',
		'031',
		'032',
		'033',
		'034',
		'035',
		'036',
		'037',
		'038',
		'039',
		'040',
		'041',
		'042',
		'043',
		'044',
		'045',
		'046',
		'047',
		'048',
		'049',
		'050',
		'051',
		'052',
		'053',
		'054',
		'055',
		'056',
		'057',
		'058',
		'059',
		'060',
		'061',
		'062',
		'063',
		'064',
		'065',
		'066',
		'067',
		'068',
		'069',
		'070',
		'071',
		'072',
		'073',
		'074',
		'075',
		'076',
		'077',
		'078',
		'079',
		'080',
		'081',
		'082',
		'083',
		'084',
		'085',
		'086',
		'087',
		'088',
		'089',
		'100',
		'101',
		'102',
		'103',
		'104',
		'105',
		'106',
		'107',
		'108',
		'109',
		'110',
		'111',
		'112',
		'113',
		'114',
		'115',
		'116',
		'117',
		'118',
		'119',
		'120',
		'121',
		'122',
		'123',
		'124',
		'125',
		'126',
		'127',
		'128',
		'129',
		'130',
		'131',
		'132',
		'133',
		'134',
		'135',
		'136',
		'137',
		'138',
		'139',
		'140',
		'141',
		'142',
		'143',
		'144',
		'145',
		'146',
		'147',
		'148',
		'149',
		'150',
		'151',
		'152',
		'153',
		'154',
		'155',
		'156',
		'157',
		'158',
		'159',
		'160',
		'161',
		'162',
		'163',
		'164',
		'165',
		'166',
		'167',
		'168',
		'169',
		'170',
		'171',
		'172',
		'173',
		'174',
		'175',
		'176',
		'177',
		'178',
		'179',
		'180',
		'181',
		'182',
		'183',
		'184',
		'185',
		'186',
		'187',
		'188',
		'189',
		'190',
		'191',
		'192',
		'193',
		'194',
		'195',
		'196',
		'197',
		'198',
		'199',
		'200',
		'201',
		'202',
		'203',
		'204',
		'205',
		'206',
		'207',
		'208',
		'209',
		'210',
		'211',
		'212',
		'213',
		'214',
		'215',
		'216',
		'217',
		'218',
		'219',
		'220',
		'221',
		'222',
		'223',
		'224',
		'225',
		'226',
		'227',
		'228',
		'229',
		'230',
		'231',
		'232',
		'233',
		'234',
		'235',
		'236',
		'237',
		'238',
		'239',
		'240',
		'241',
		'242',
		'243',
		'244',
		'245',
		'246',
		'247',
		'248',
		'249',
		'250',
		'251',
		'252',
		'253',
		'254',
		'255',
		'256',
		'257',
		'258',
		'259',
		'260',
		'261',
		'262',
		'263',
		'264',
		'265',
		'266',
		'267',
		'268',
		'269',
		'270',
		'271',
		'272',
		'273',
		'274',
		'275',
		'276',
		'277',
		'278',
		'279',
		'280',
		'281',
		'282',
		'283',
		'284',
		'285',
		'286',
		'287',
		'288',
		'289',
		'290',
		'291',
		'292',
		'293',
		'294',
		'295',
		'296',
		'297',
		'298',
		'299',
		'300',
		'301',
		'302',
		'303',
		'304',
		'305',
		'306',
		'307',
		'308',
		'309',
		'310',
		'311',
		'312',
		'313',
		'314',
		'315',
		'316',
		'317',
		'318',
		'319',
		'320',
		'321',
		'322',
		'323',
		'324',
		'325',
		'326',
		'327',
		'328',
		'329',
		'330',
		'331',
		'332',
		'333',
		'334',
		'335',
		'336',
		'337',
		'338',
		'339',
		'341',
		'342',
		'343',
		'344',
		'345',
		'346',
		'347',
		'348',
		'349',
		'350',
		'351',
		'352',
		'353',
		'354',
		'355',
		'356',
		'357',
		'358',
		'359',
		'360',
		'361',
		'362',
		'363',
		'364',
		'365',
		'366',
		'367',
		'368',
		'369',
		'370',
		'371',
		'372',
		'373',
		'374',
		'375',
		'376',
		'377',
		'378',
		'379',
		'380',
		'381',
		'382',
		'383',
		'384',
		'385',
		'386',
		'387',
		'388',
		'389',
		'390',
		'391',
		'392',
		'393',
		'394',
		'395',
		'396',
		'397',
		'398',
		'399',
		'400',
		'401',
		'402',
		'403',
		'404',
		'405',
		'406',
		'407',
		'408',
		'409',
		'410',
		'411',
		'412',
		'413',
		'414',
		'415',
		'416',
		'417',
		'418',
		'420',
		'421',
		'422',
		'423',
		'424',
		'425',
		'426',
		'427',
		'428',
		'429',
		'430',
		'431',
		'432',
		'433',
		'434',
		'435',
		'436',
		'437',
		'438',
		'439',
		'440',
		'441',
		'442',
		'443',
		'444',
		'445',
		'446',
		'447',
		'448',
		'449',
		'450',
		'451',
		'452',
		'453',
		'454',
		'455',
		'456',
		'457',
		'458',
		'459',
		'461',
		'462',
		'463',
		'464',
		'465',
		'466',
		'467',
		'468',
		'469',
		'470',
		'471',
		'472',
		'473',
		'474',
		'475',
		'476',
		'477',
		'478',
		'479',
		'480',
		'481',
		'482',
		'483',
		'484',
		'485',
		'486',
		'487',
		'488',
		'489',
		'490',
		'491',
		'492',
		'493',
		'494',
		'495',
		'496',
		'497',
		'498',
		'499',
		'500',
		'501',
		'502',
		'503',
		'504',
		'506',
		'507',
		'509',
		'520',
		'521',
		'522',
		'523',
		'524',
		'525',
		'526',
		'527',
		'528',
		'529',
		'530',
		'531',
		'532',
		'533',
		'534',
		'535',
		'536',
		'537',
		'538',
		'539',
		'540',
		'541',
		'542',
		'543',
		'544',
		'545',
		'546',
		'547',
		'548',
		'549',
		'550',
		'551',
		'552',
		'553',
		'554',
		'555',
		'556',
		'557',
		'558',
		'559',
		'560',
		'562',
		'563',
		'564',
		'565',
		'566',
		'567',
		'582',
		'600',
		'601',
		'602',
		'603',
		'604',
		'605',
		'606',
		'607',
		'608',
		'609',
		'610',
		'611',
		'612',
		'613',
		'614',
		'615',
		'616',
		'617',
		'618',
		'619',
		'620',
		'621',
		'622',
		'623',
		'624',
		'625',
		'626',
		'627',
		'628',
		'629',
		'630',
		'631',
		'632',
		'633',
		'634',
		'635',
		'636',
		'637',
		'638',
		'639',
		'650',
		'651',
		'652',
		'653',
		'654',
		'655',
		'700',
		'701',
		'702',
		'703',
		'704',
		'705',
		'706',
		'707',
		'708',
		'709',
		'712',
		'713',
		'714',
		'715',
		'716',
		'717',
		'719',
		'720',
		'721',
		'722',
		'723',
		'724',
		'725',
		'728',
		'776',
		'777',
	];
	private static $rollie_skus = [];
	private static $buffer = 20;

	public static function init(PDO $db){
		if(!self::$initialized){
			self::$rollie_skus = $db->query("SELECT v.sku FROM variants v
LEFT JOIN products p ON v.product_id=p.id
LEFT JOIN variant_attribute_codes vac ON vac.variant_id=v.shopify_id
WHERE (vac.format = 'rollie' AND vac.product_type='fragrance')
OR (p.type = 'Scent Club Month' AND p.published_at IS NOT NULL AND p.deleted_at IS NULL)
GROUP BY v.sku;")->fetchAll(PDO::FETCH_COLUMN);
			self::$initialized = true;
		}
	}

	public static function calc_branch_id(PDO $db, $cc_order){
		self::init($db);
		if(empty($cc_order['deliveryPostalCode'])){
			return -1;
		}

		// First determine the location preference (based on zip and intl)
		$locations_available = self::get_available_locations($cc_order);

		// Shipper logic
		if(!empty($locations_available[23755])){
			$locations_available[23755] = self::can_23755_ship_quantity($cc_order['lineItems']);
		}

		foreach($locations_available as $branch_id => $available){
			if(!$available){
				log_echo_multi(" - Branch $branch_id not available, skipping");
				continue;
			}
			// Check if location can fulfill order
			if(self::branch_can_fill_items($db, $branch_id, $cc_order['lineItems'])){
				return $branch_id;
			} else {
				$locations_available[$branch_id] = false;
			}
		}

		return -3; // TODO: Throw real errors
	}

	public static function get_available_locations($cc_order){
		if(empty($cc_order['deliveryCountry']) || !in_array(strtoupper($cc_order['deliveryCountry']), ['UNITED STATES', 'US', 'USA'])){
			log_echo_multi(" - Non-US order, east cannot fulfill");
			return [
				3 => true,
				23755 => false,
			];
		}
		$zip_prefix = substr($cc_order['deliveryPostalCode'], 0, 3);
		if(in_array($zip_prefix, self::$east_zip_prefixes)){
			log_echo_multi(" - Matches east zip, prefer east");
			return [
				23755 => true,
				3 => true,
			];
		}
		log_echo_multi(" - Does not match east zip, prefer west");
		return [
			3 => true,
			23755 => true,
		];
	}

	public static function can_23755_ship_quantity($line_items){
		$total_quantity = 0;
		$rollie_quantity = 0;
		foreach($line_items as $item){
			if(substr($item['code'], 0, 2) == '60' || substr($item['code'], 0, 2) == '70'){
				log_echo_multi(" - Skipping ".$item['code']." in total quantity calc because it's a kit");
				continue;
			}
			if(in_array($item['code'], [
				'99238701-112', // Don't count salt air sample as an item
			])){
				continue;
			}
			if(in_array($item['code'], self::$rollie_skus)){
				$rollie_quantity += $item['qty'];
			}
			$total_quantity += $item['qty'];
		}
		if($total_quantity > 2){
			log_echo_multi(" - Total quantity $total_quantity > 2, east cannot fulfill");
			return false;
		}
		if($total_quantity > $rollie_quantity ){
			log_echo_multi(" - Total $total_quantity > rollie quantity $rollie_quantity, east cannot fulfill");
			return false;
		}
		return true;
	}

	public static function branch_can_fill_items(PDO $db, $branch_id, $line_items){
		foreach($line_items as $line_item){
			if($line_item['code'] == '13200311-121'){
				if($branch_id == 3){
					log_echo_multi(" - Branch $branch_id can fulfill ".$line_item['code']);
					continue;
				} else {
					log_echo_multi(" - Branch $branch_id cannot fulfill ".$line_item['code']);
					return false;
				}
			}

			if(!self::branch_can_fill_sku($db, $branch_id, $line_item['code'], $line_item['qty'])){
				return false;
			}
		}
		return true;
	}

	public static function branch_can_fill_sku(PDO $db, $branch_id, $sku, $quantity = 1){
		if(substr($sku, 0, 2) == '60' || substr($sku, 0, 2) == '70'){
			log_echo_multi(" - Branch $branch_id can fill sku $sku (Kit)");
			return true; // Ignore kit skus
		}
		if(self::get_sku_available_branch($db, $branch_id, $sku) - self::$buffer >= $quantity){
			log_echo_multi(" - Branch $branch_id can fill sku $sku ");
			return true;
		} else {
			log_echo_multi(" - Branch $branch_id cannot fill sku $sku ");
			return false;
		}
	}

	public static function get_sku_available_branch(PDO $db, $branch_id, $sku){
		global $_stmt_cache;
		if(empty($_stmt_cache['cin_branch_stock_check'])){
			$_stmt_cache['cin_branch_stock_check'] = $db->prepare("
SELECT csu.available+csu.virtual AS available FROM cin_stock_units csu
LEFT JOIN cin_product_options cpo ON cpo.id=csu.cin_product_option_id
LEFT JOIN cin_products cp ON cp.id=cpo.cin_product_id
LEFT JOIN cin_branches cb ON cb.id=csu.cin_branch_id
WHERE cpo.sku = :sku
AND cin_branch_id = :branch_id;");
		}
		$_stmt_cache['cin_branch_stock_check']->execute([
			'sku' => $sku,
			'branch_id' => $branch_id,
		]);
		if($_stmt_cache['cin_branch_stock_check']->rowCount() == 0){
			log_echo_multi(" - Branch $branch_id cannot fill sku $sku ");
			return 0;
		}
		return $_stmt_cache['cin_branch_stock_check']->fetchColumn();
	}

}

if(!function_exists('log_echo_multi')){
	function log_echo_multi($line){}
}